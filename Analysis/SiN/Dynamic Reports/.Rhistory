4^3
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
install.packages('reticulate')
install.packages("reticulate")
reticulate::use_condaenv('C:\Users\gfraga\Anaconda3\envs\spyder-env')
reticulate::use_condaenv('C:/Users/gfraga/Anaconda3/envs/spyder-env/python.exe')
reticulate::repl_python()
#| tags: []
# Library installations:
#conda install -c plotly plotly
#conda install -c conda-forge itables
# ------------------------------------------------------------------
import sys
import os
import glob
import re
import pandas as pd
import numpy as np
import plotly.express as px
from itables import init_notebook_mode, show
from datetime import date
today = date.today()
print("Run date:", today)
# File paths
thisScriptDir = os.getcwd()
baseDir = thisScriptDir[:thisScriptDir.find("Scripts")]
dirinput = os.path.join(baseDir + 'Data','SiN','analysis','beh','task-sin')
diroutput = os.path.join(baseDir + 'Data','SiN','analysis','beh','task-sin')
# Find file read data set
fileinput =  [os.path.join(dirinput, f) for f in os.listdir(dirinput) if f.startswith('Gathered_')]
df = pd.read_csv(fileinput[0], index_col=None)
# Relabel noise levels
levelmapping = {'0.6p': '1_easy','0.4p': '2_mid','0.2p': '3_hard','-7db': '1_easy','-9db': '2_mid','-11db': '3_hard'}
df['levels'] = df['levels'].replace(levelmapping)
show(df,scrollY="600px", scrollCollapse=True, paging=False)
df
quit
`python len(df)`
reticulate::repl_python()
length = len(df)
quit
`python length`
`{python} length`
# Results
## Behavioral analysis
Gathered table
