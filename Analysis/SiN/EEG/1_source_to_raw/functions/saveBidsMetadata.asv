% =========================================================================
% Audio Trigger adjust 
% =========================================================================
% Author: G.FragaGonzalez
% Description:
% - Save json file with descriptions of the loaded EEG dataset 
% - needs EEG data set and an output directory 

function saveBidsMetadata(EEG,diroutput,chanLocsFile)

%%  Task info 
splitStr = strsplit(EEG.setname, '_');
taskID = splitStr{2};

if  contains(taskID,'task-sin')
        task_descript = "A version of a speech intelligibility task using a coordinate response measure, based on Brungart et al.2001, DOI: 10.1121/1.1357812. German sentences are aurally presented either vocoded or with background noise, with 3 levels of difficulty. Each sentence has a fixed structure and 3 target items, which the subject must identify from 4 possible alternatives after each trial. Targets can be a call sign (Adler, Droessel, Kroete, Tiger), a color (gelb, gruen, rot, weiss) or a number (eins, zwei, drei, vier). A 3x4 grid is presented with images after each trial for the subject to click. The 64 possible combinations are presented in naturalistic synthesized speech with male and female voices." ;
        task_instructions =  "Listen well and click on the images representing the words you heard after each trial (...)";
    
elseif contains(taskID,'task-rest')
        task_descript = "4 minutes eyes-closed resting state. A beep is used to indicate beginning and end of the four minutes."      ;
        task_instructions =  "Close your eyes and try to remain still as possible. After hearing the second beep you can open them again";
end

    task_comments = "Data set created from spliting the source .bdf file containing the entire session. EEGlab was used to import, load channel coordinates split and export in .set format.";


%% JSON FILE with rec info
fileDuration = round(EEG.pnts/EEG.srate,4);
fileSamplingRate  = EEG.srate;

% Define metadata struct
metaData = struct(...
    'ProjectName', 'Speech in noise EEG', ...
    'TaskName', taskID, ...
    'TaskDescription', task_descript, ...
    'Instructions', task_instructions, ...
    'InstitutionAddress', 'LiRI Linguistic Research Infrastructure, University of Zurich, Andreasstrasse 15, 8050 Zurich, Switzerland', ...
    'InstitutionName', 'LiRI Linguistic Research Infrastructure, University of Zurich', ...
    'PowerLineFrequencyHz', 50, ...
    'Manufacturer', 'BIOSEMI', ...
    'ManufacturersModelName', 'ActiveTwo MK2HS', ...
    'RecordingType', 'continuous', ...
    'RecordingDurationSec', fileDuration, ...
    'EEGPlacementScheme', 'International 1020 system', ...
    'EEGReference', 'CMS/DRL', ...
    'SamplingFrequencyHz', fileSamplingRate, ...
    'EEGChannelCount', 64, ...
    'MiscChannelCount', 2, ...
    'TriggerChannelCount', 1, ...
    'EOGChannelCount', 4, ...
    'ECGChannelCount', 0, ...
    'EMGChannelCount', 0, ...
    'SoftwareFilters', 'n/a', ...
    'HardwareFilters', 'n/a', ...
    'Comments', task_comments ...
);

% 
% Convert to JSON string
jsonStr = jsonencode(metaData,'PrettyPrint',true); 
% Write formatted JSON to file
fileID = fopen(fullfile(diroutput, [EEG.setname '_eeg.json']), 'w');
fprintf(fileID, '%s', jsonStr);
fclose(fileID);
disp('---> saved EEG json');


%% JSON FILE with Electrode coordinate system info 
% Define metadata struct
electrode_metaData = struct(...
    'EEGCoordinateSystem','EEGlab',...
    'EEGCoordinateUnits', 'mm',...
    'EEGCoordinateSystemDescription', 'https://eeglab.org/tutorials/ConceptsGuide/coordinateSystem.html',...
    'IntendedFor', EEG.setname ... 
);       
% Convert to JSON string
jsonStr = electrode_metaData(metaData,'PrettyPrint',true); 

% Write formatted JSON to file
fileID = fopen(fullfile(diroutput, [EEG.setname '_coordsystem.json']), 'w');
fprintf(fileID, '%s', jsonStr);
fclose(fileID);
disp('---> saved EEG coordSystem file');

%% Table with electrode coordinates 
chanCoordFile = dir([dirinput,filesep,'*.csv']);


% Define current subject input and output dir
fullFileInput = fullfile(file.folder,filesep,file.name);
diroutput = strrep([file.folder],'sourcedata','rawdata'); % Assuming only one 'rawdata' folder is present in the full path
mkdir(diroutput)
end