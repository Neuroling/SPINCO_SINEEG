clear all; close all 

%% Run Automagic project
% ======================================================================
% - Reads parameters from a project created in GUI
% - See project_state.mat file
% 



%% CREATE PROJECT FROM SCRATCH
% Paths (Find data folder using location relative to Scripts folder)
folders = strsplit(matlab.desktop.editor.getActiveFilename, filesep);
baseDir = fullfile(folders{1:(find(strcmp(folders, 'Scripts'), 1)-1)});
dirinput = [baseDir,filesep,fullfile('Data','SiN','preproc_automagic','p002','task-rest-post')];
diroutput = [baseDir,filesep,fullfile('Data','SiN','preproc_automagic','p002','task-rest-post_MAGIC')];
% Input template, name 
%project_template = [baseDir,filesep,fullfile('Data','SiN','preproc_automagic','project_state.mat')];
project_name = 'ComPro';
mkdir(diroutput)
fromTemplate = 0;
 
% Project Parameters
params = struct('FilterParams', struct('notch', struct('freq',  50), ...
                                       'high',  struct('freq',  0.5, 'order', []),... % Default order for filtering
                                       'low',   struct('freq',  30, 'order', []),...
                                       'zapline',   struct('freq', 50, 'ncomps', 3)),...
                 'CRDParams',           struct('ChannelCriterion',      'off',...
                                               'LineNoiseCriterion',    4,...
                                               'BurstCriterion',         'off',...
                                               'WindowCriterion',        'off', ...
                                               'Highpass',              [0.25 0.75]), ...
                 'PrepParams',          struct(), ...
                 'HighvarParams',       struct('sd', 25), ...
                 'InterpolationParams', struct('method', 'spherical'), ...
                 'RPCAParams',          struct('lambda', [], ...                    % Default lambda by alm_rpca
                                               'tol', 1e-7, ... 
                                               'maxIter', 1000), ...
                 'MARAParams',          struct('chanlocMap', containers.Map, ...
                                               'largeMap', 0, ...
                                               'high',  struct('freq', 1.0, 'order', [])), ...
                 'ICLabelParams',       struct('brainTher', [], ...
                                               'muscleTher', [0.8 1], ...
                                               'eyeTher', [0.8 1], ...
                                               'heartTher', [0.8 1], ...
                                               'lineNoiseTher', [0.8 1], ...
                                               'channelNoiseTher', [0.8 1], ...
                                               'otherTher', [], ...
                                               'includeSelected', 0, ...
                                               'high',     struct('freq', 2.0, 'order', [])),...
                 'EOGRegressionParams', struct(), ...
                 'ChannelReductionParams', struct('tobeExcludedChans', []), ...
                 'EEGSystem',           struct('name', 'Biosemi',...
                                               'sys10_20', 1, ...
                                               'locFile', '', ...
                                               'refChan', struct('idx', []), ...
                                               'fileLocType', '',...
                                               'eogChans', [], ...
                                               'powerLineFreq', 50), ...
                 'Settings',            struct('trackAllSteps', 0, ...
                                               'pathToSteps', '/allSteps.mat',...
                                               'colormap','Default',...
                                               'sortChans', 0));

%
params = struct('FilterParams',         struct('notch', struct('freq',  50), ...
                                               'high',  struct('freq',  0.5, 'order', []),... % Default order for filtering
                                               'low',   struct('freq',  30, 'order', [])),...
                 'CRDParams',           struct('ChannelCriterion',      0.85,...
                                               'LineNoiseCriterion',    4,...
                                               'BurstCriterion',        5,...
                                               'WindowCriterion',       0.25, ...
                                               'Highpass',              [0.25 0.75]) ...
               );
                                           
% paths 
    name = project_name; 
    dataFolder = dirinput;
    resultsFolder = diroutput;
    Params = params; % param from previous
    ext = '.set';
    VisualisationParams = struct();
    samplingrate = '512'; % if blank reads from file? 

    project = Project(name, dataFolder, resultsFolder, ext, Params, VisualisationParams, samplingrate);
    project.preprocessAll();
    project.interpolateSelected();
%% Project definition from template
%--------------------------- 
if fromTemplate == 1 
    % Load template 
    eeglab nogui
    addAutomagicPaths();
    load(project_template); % This loads object self of class 

    % Define new project 
    name = project_name; 
    dataFolder = dirinput;
    resultsFolder = diroutput;
    Params = self.params; % param from previous
    ext = '.set';
    VisualisationParams = struct();
    samplingrate = 512; %WhY hardcoding this ? 

    project = Project(name, dataFolder, resultsFolder, ext, Params, VisualisationParams, samplingrate);
    project.preprocessAll();
    project.interpolateSelected();
end